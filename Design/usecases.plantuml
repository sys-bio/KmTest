@startuml
left to right direction

actor SBMLTool as sbml_tool
actor BackgroundTool as bgtool
actor UITool as uitool

sbml_tool <|-- bgtool
note on link
     "isDerivedFrom"
end note
sbml_tool <|-- uitool

bgtool --> km_static
bgtool --> km_verifiy
uitool --> km_validate

note top of bgtool
    In analogy to "Private".
    These happen behind the scenes
    and user doesn't know they
    are happening
end note

note bottom of uitool
    In analogy to "public".
    Users must proactively
    use these tools.
end note

package km_static {
     (parameters initialized) as init
     (warnings when parameters are 0)
     (Others?)
}

package km_verifiy {
    (trajectories tending to infinity)
    (negative simulation values)
    (Large time steps) as lts
    (Single time step)
}

note left of lts {
    Large time steps combined
    with oscillatory trajectories ?
}

package km_validate {
       (greater than at time t)
       (greater than at times between [start time, end time])
       (less than at time t)
       (less than at times between [start time, end time])
       (A is always greater than B)
       (max[A] > B at time t) as func
       (min[A] > B at time t)
       (max[A] > max[B])
       (max[A] > min[B])
       (average[A] > Average[B])
       (DTW[A, B] < DTW[A, C]) as dtw
}

note right of dtw {
       DTW - dynamic time warping
          i.e. the DTW distance between A and B
          is less than (i.e. more similar to) the distance
          between A and C.
          - fastdtw is a python package for this.
}

note right of func {
    These are basically functions.
    More generally, we could provide a means
    of users to provide their own functions
}

'SbmlTool --> km_static
'SbmlTool --> km_verifiy
' --> km_validate




@enduml